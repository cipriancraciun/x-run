#!/dev/null




::// deploy / ...




:: deploy / rsync / linux :: exec "${ZRUN[@]}" ':: deploy / rsync' linux "${@}"
:: deploy / rsync / darwin :: exec "${ZRUN[@]}" ':: deploy / rsync' darwin "${@}"
:: deploy / rsync / freebsd :: exec "${ZRUN[@]}" ':: deploy / rsync' freebsd "${@}"
:: deploy / rsync / openbsd :: exec "${ZRUN[@]}" ':: deploy / rsync' openbsd "${@}"
--<< deploy / rsync
	test "${#}" -eq 2
	_os="${1}"
	_target="${2}"
	shift -- 2
	"${ZRUN[@]}" ':: deploy / release' "${_os}"
	_source="./.outputs/z-run--release--${_os}"
	printf -- '[ii]  deploying (`%s`) to `%s`...\n' "${_os}" "${_target}" >&2
	rsync -i -t -p --chmod=0555 -- "${_source}" "${_target}"
!!


<< deploy / publish
	test "${#}" -eq 0
	test -d ./.publish/
	"${ZRUN[@]}" ':: deploy / release'
	_build_version="$( exec -- cat -- ./sources/embedded/build-version.txt )"
	printf -- '[ii]  publishing `%s`...\n' "${_build_version}" >&2
	if test -e "./.publish/linux/z-run--linux--v${_build_version}" -o -e "./.publish/darwin/z-run--darwin--v${_build_version}" ; then
		printf -- '[ee]  release already exists!\n' >&2
		exit -- 1
	fi
	rsync -i -t -p --chmod=0555 -- ./.outputs/z-run--release--linux "./.publish/linux/z-run--linux--v${_build_version}"
	rsync -i -t -p --chmod=0555 -- ./.outputs/z-run--release--darwin "./.publish/darwin/z-run--darwin--v${_build_version}"
	rsync -i -t -p --chmod=0555 -- ./.outputs/z-run--release--freebsd "./.publish/freebsd/z-run--freebsd--v${_build_version}"
	rsync -i -t -p --chmod=0555 -- ./.outputs/z-run--release--openbsd "./.publish/openbsd/z-run--openbsd--v${_build_version}"
	ln -s -T -f -- "./z-run--linux--v${_build_version}" ./.publish/linux/z-run
	ln -s -T -f -- "./z-run--darwin--v${_build_version}" ./.publish/darwin/z-run
	ln -s -T -f -- "./z-run--freebsd--v${_build_version}" ./.publish/freebsd/z-run
	ln -s -T -f -- "./z-run--openbsd--v${_build_version}" ./.publish/openbsd/z-run
!!


<< deploy / release
	if test "${#}" -ge 1 ; then
		_os="${1}"
		shift -- 1
	else
		_os='all'
	fi
	test "${#}" -eq 0
	if test "${ZRUNDEV_NORELEASE:-}" == true ; then
		exit -- 0
	fi
	case "${_os}" in
		( all | linux )
			"${ZRUN[@]}" ':: go / build / main / release / linux'
		;;&
		( all | darwin )
			"${ZRUN[@]}" ':: go / build / main / release / darwin'
		;;&
		( all | freebsd )
			"${ZRUN[@]}" ':: go / build / main / release / freebsd'
		;;&
		( all | openbsd )
			"${ZRUN[@]}" ':: go / build / main / release / openbsd'
		;;&
		( all | linux | darwin | freebsd | openbsd )
		;;
		( * )
			printf -- '[ee]  invalid os `%s`;  aborting!\n' "${_os}" >&2
		;;
	esac
!!

