#!/dev/null




::// *

::// do / run / ...
::// do / use / ...

::// go / execute / ...
::// go / build / ...
::// go / dependencies / ...

::// workspace / ...




++<< workspace / deploy
	test "${#}" -eq 0
	"${ZRUN[@]}" ':: go / build / main / release'
	_timestamp="$( exec -- date -- '+%Y-%m-%d-%H-%M-%S' )"
	cp -f -- ./.outputs/main-release.elf "${HOME}/.bin/z-run--${_timestamp}"
	ln -s -f -- "./z-run--${_timestamp}" "${HOME}/.bin/z-run--0000"
!!




<< do / run / 0
	"${ZRUN[@]}" ':: go / build / main / debug'
	test "${#}" -ge 1
	export -n -- \
			ZRUN_LIBRARY_SOURCE \
			ZRUN_LIBRARY_CACHE \
			ZRUN_EXECUTABLE \
			ZRUN_CACHE \
			ZRUN_TERM \
	#
	if test -n "${ZRUNDEV_USE:-}" ; then
		export -- ZRUN_LIBRARY_SOURCE="${ZRUNDEV_USE}"
		export -n -- ZRUNDEV_USE=
	fi
	if test -n "${ZRUNDEV_TERM:-}" ; then
		export -- TERM="${ZRUNDEV_TERM}"
		export -n -- ZRUNDEV_TERM=
	fi
	exec -a "${1}" -- ./.outputs/main-debug.elf "${@:2}"
!!

<< do / run
	exec -- "${ZRUN[@]}" ':: do / run / 0' z-run "${@}"
!!


:: do / run / execute :: exec -- "${ZRUN[@]}" ':: do / run' execute-scriptlet "${@}"
:: do / run / select-label :: exec -- "${ZRUN[@]}" ':: do / run' select-export-scriptlet-label "${@}"
:: do / run / select-body :: exec -- "${ZRUN[@]}" ':: do / run' select-export-scriptlet-body "${@}"
:: do / run / list-labels :: exec -- "${ZRUN[@]}" ':: do / run' export-scriptlet-labels "${@}"
:: do / run / parse-library :: exec -- "${ZRUN[@]}" ':: do / run' parse-library "${@}"
:: do / run / export-library-json :: exec -- "${ZRUN[@]}" ':: do / run' export-library-json "${@}"
:: do / run / export-library-cdb :: exec -- "${ZRUN[@]}" ':: do / run' export-library-cdb "${@}"
:: do / run / select :: exec -- "${ZRUN[@]}" ':: do / run / 0' '[z-run:select]' "${@}"


:: do / use / workspace :: export -- ZRUNDEV_USE=./.z-run
:: do / use / syntax :: export -- ZRUNDEV_USE=./examples/syntax.z-run
:: do / use / debug :: export -- ZRUNDEV_USE=./examples/debug.z-run
:: do / use / generators :: export -- ZRUNDEV_USE=./examples/generators.z-run
:: do / use / comments :: export -- ZRUNDEV_USE=./examples/comments.z-run
:: do / use / menus :: export -- ZRUNDEV_USE=./examples/menus.z-run

:: do / use / photos :: export -- ZRUNDEV_USE=./examples/photos.z-run
:: do / use / desktop :: export -- ZRUNDEV_USE=./examples/desktop.z-run
:: do / use / vonuvoli :: export -- ZRUNDEV_USE=./examples/vonuvoli.z-run

:: do / use / term / enable :: export -- ZRUNDEV_TERM="${TERM}"
:: do / use / term / disable :: export -- ZRUNDEV_TERM=dumb




<< go / build / main / debug
	test "${#}" -eq 0
	_outputs="$( exec -- readlink -e -- ./.outputs )"
	exec -- "${ZRUN[@]}" ':: go / tool' \
			build \
			-v \
			-o "${_outputs}/main-debug.elf" \
			-- \
			./main.go \
	#
!!

<< go / build / main / release
	test "${#}" -eq 0
	_outputs="$( exec -- readlink -e -- ./.outputs )"
	exec -- "${ZRUN[@]}" ':: go / tool' \
			build \
			-v \
			-o "${_outputs}/main-release.elf" \
			-ldflags '-s' \
			-- \
			./main.go \
	#
!!




<< go / execute / main / debug
	"${ZRUN[@]}" ':: go / build / main / debug'
	exec -- ./.outputs/main-debug.elf "${@}"
!!

<< go / execute / main / release
	"${ZRUN[@]}" ':: go / build / main / release'
	exec -- ./.outputs/main-release.elf "${@}"
!!




<< go / dependencies / update
	test "${#}" -eq 0
	exec -- "${ZRUN[@]}" ':: go / tool' \
			get \
			-v \
			-d \
			-u=patch \
			-- \
			./... \
	#
!!


<< go / dependencies / list
	test "${#}" -eq 0
	exec -- "${ZRUN[@]}" ':: go / tool' \
			list \
			-m \
			-- \
			all \
	#
!!


<< go / dependencies / tidy
	test "${#}" -eq 0
	exec -- "${ZRUN[@]}" ':: go / tool' \
			mod tidy \
	#
!!




<< go / tool
	test "${#}" -ge 1
	_outputs="$( exec -- readlink -e -- ./.outputs )"
	_sources="$( exec -- readlink -e -- ./sources )"
	
	export -- GOPATH="${_outputs}/go"
	export -- GOBIN="${_outputs}/go/bin"
	export -- GOTMPDIR="${_outputs}/go/tmp"
	export -- GOCACHE="${_outputs}/go/cache"
	
	cd -- "${_sources}"
	
	exec -- go "${@}"
!!




<< workspace / initialize / go
	test "${#}" -eq 0
	_outputs="$( exec -- readlink -e -- ./.outputs )"
	_sources="$( exec -- readlink -e -- ./sources )"
	
	GOPATH="${_outputs}/go"
	GOBIN="${_outputs}/go/bin"
	GOTMPDIR="${_outputs}/go/tmp"
	GOCACHE="${_outputs}/go/cache"
	_gosrc="${_outputs}/go/src"
	_gopkg="${_outputs}/go/pkg"
	
	for _folder in "${GOPATH}" "${GOBIN}" "${GOTMPDIR}" "${GOTMPDIR}" "${GOCACHE}" "${_gosrc}" "${_gopkg}" ; do
		if test ! -e "${_folder}" ; then
			mkdir -- "${_folder}"
		fi
	done
!!




<< workspace / initialize / outputs
	test "${#}" -eq 0
	if test ! -d ./.outputs ; then
		_outputs_store="${TMPDIR:-/tmp}/go--${UID}--${RANDOM}-${RANDOM}-${RANDOM}-${RANDOM}"
		mkdir -- "${_outputs_store}"
		_outputs_store="$( exec -- readlink -e -- "${_outputs_store}" )"
		ln -s -f -T -- "${_outputs_store}" ./.outputs
	fi
!!




<< workspace / sources / codes / duplicates
	test "${#}" -eq 0
	exec -- xargs \
			-r -d '\n' -I {} \
			-a <(
				grep \
						-o \
						-P \
						-e '(?<=\[)[0-9a-f]{8}(?=\])|(?<=0x)[0-9a-f]{8}(?=[^0-9a-zA-Z]|$)' \
						-h \
						-r ./sources \
						--include '*.go' \
				| sort \
				| uniq -d
			) \
			-- \
		grep \
			-P \
			-e '(?<=\[){}(?=\])|(?<=0x){}(?=[^0-9a-zA-Z]|$)' \
			-r ./sources \
			-n \
			--include '*.go' \
			--color \
	#
!!

